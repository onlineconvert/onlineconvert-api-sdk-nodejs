{
  "swagger": "2.0",
  "info": {
    "title": "Online Convert",
    "description": "",
    "version": "1.0.0"
  },
  "produces": ["application/json"],
  "host": "localhost:8080",
  "basePath": "",
  "paths": {
  
  "/jobs/{job_id}/input": {
    "get": {
      "x-swagger-router-controller": "Input",
      "tags": ["Input"],
      "operationId": "jobsJobIdInputGet",
      "parameters": [
        
        {
  "name" : "token",
  "in" : "header",
  "description" : "Token for authentication.",
  "required" : false,
  "type" : "string"
},
        
        {
  "name" : "key",
  "in" : "query",
  "description" : "Api key for the user to filter.",
  "required" : false,
  "type" : "string"
},
        
        {
  "name" : "job_id",
  "in" : "path",
  "description" : "ID of job that needs to be fetched",
  "required" : true,
  "type" : "string"
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "Downloads the binary for the file.",
  "schema" : {
    "type" : "array",
    "items" : {
      "$ref" : "#/definitions/InputFile"
    }
  }
}
        ,
        
        "401": {
  "description" : "No API key or invalid API key given.",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        ,
        
        "404": {
  "description" : "The specified job does not exists.",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        
        
      }
    }
  } ,
  
  "/jobs/{job_id}/input": {
    "post": {
      "x-swagger-router-controller": "Input",
      "tags": ["Input"],
      "operationId": "jobsJobIdInputPost",
      "parameters": [
        
        {
  "in" : "body",
  "name" : "body",
  "required" : false,
  "schema" : {
    "$ref" : "#/definitions/InputFile"
  }
},
        
        {
  "name" : "token",
  "in" : "header",
  "description" : "Token for authentication.",
  "required" : false,
  "type" : "string"
},
        
        {
  "name" : "key",
  "in" : "query",
  "description" : "Api key for the user to filter.",
  "required" : false,
  "type" : "string"
},
        
        {
  "name" : "job_id",
  "in" : "path",
  "description" : "ID of job that needs to be fetched",
  "required" : true,
  "type" : "string"
}
        
      ],
      "responses": {
        
        "201": {
  "description" : "The created conversion.",
  "schema" : {
    "$ref" : "#/definitions/InputFile"
  }
}
        ,
        
        "401": {
  "description" : "No API key or invalid API key given.",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        ,
        
        "404": {
  "description" : "The specified job does not exists.",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        
        
      }
    }
  } ,
  
  "/jobs/{job_id}/input/{file_id}": {
    "get": {
      "x-swagger-router-controller": "Input",
      "tags": ["Input"],
      "operationId": "jobsJobIdInputFileIdGet",
      "parameters": [
        
        {
  "name" : "token",
  "in" : "header",
  "description" : "Token for authentication.",
  "required" : false,
  "type" : "string"
},
        
        {
  "name" : "key",
  "in" : "query",
  "description" : "Api key for the user to filter.",
  "required" : false,
  "type" : "string"
},
        
        {
  "name" : "job_id",
  "in" : "path",
  "description" : "ID of job that needs to be fetched",
  "required" : true,
  "type" : "string"
},
        
        {
  "name" : "file_id",
  "in" : "path",
  "description" : "Id of the file to download",
  "required" : true,
  "type" : "string"
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "Get a file for the current job",
  "schema" : {
    "$ref" : "#/definitions/InputFile"
  }
}
        ,
        
        "401": {
  "description" : "No API key or invalid API key given.",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        ,
        
        "404": {
  "description" : "The specified job does not exists.",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        
        
      }
    }
  } ,
  
  "/jobs/{job_id}/input/{file_id}": {
    "delete": {
      "x-swagger-router-controller": "Input",
      "tags": ["Input"],
      "operationId": "jobsJobIdInputFileIdDelete",
      "parameters": [
        
        {
  "name" : "token",
  "in" : "header",
  "description" : "Token for authentication.",
  "required" : false,
  "type" : "string"
},
        
        {
  "name" : "key",
  "in" : "query",
  "description" : "Api key for the user to filter.",
  "required" : false,
  "type" : "string"
},
        
        {
  "name" : "job_id",
  "in" : "path",
  "description" : "ID of job that needs to be fetched",
  "required" : true,
  "type" : "string"
},
        
        {
  "name" : "file_id",
  "in" : "path",
  "description" : "Id of the file to download",
  "required" : true,
  "type" : "string"
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "Get the removed file for the current job.",
  "schema" : {
    "$ref" : "#/definitions/InputFile"
  }
}
        ,
        
        "401": {
  "description" : "No API key or invalid API key given.",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        ,
        
        "404": {
  "description" : "The specified job does not exists.",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        
        
      }
    }
  } 
  
   ,
  
  "/jobs": {
    "get": {
      "x-swagger-router-controller": "Jobs",
      "tags": ["Jobs"],
      "operationId": "jobsGet",
      "parameters": [
        
        {
  "name" : "status",
  "in" : "query",
  "description" : "Filter the status of the job.",
  "required" : false,
  "type" : "string"
},
        
        {
  "name" : "token",
  "in" : "header",
  "description" : "Token for authentication.",
  "required" : false,
  "type" : "string"
},
        
        {
  "name" : "key",
  "in" : "query",
  "description" : "Api key for the user to filter.",
  "required" : false,
  "type" : "string"
},
        
        {
  "name" : "page",
  "in" : "query",
  "description" : "Pagination for list of elements.",
  "required" : false,
  "type" : "number",
  "default" : "1"
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "Gets the newly created job info",
  "schema" : {
    "type" : "array",
    "items" : {
      "$ref" : "#/definitions/Job"
    }
  }
}
        ,
        
        "401": {
  "description" : "No API key or invalid API key given.",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        ,
        
        "400": {
  "description" : "Invalid input.",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        
        
      }
    }
  } ,
  
  "/jobs": {
    "post": {
      "x-swagger-router-controller": "Jobs",
      "tags": ["Jobs"],
      "operationId": "jobsPost",
      "parameters": [
        
        {
  "name" : "key",
  "in" : "query",
  "description" : "Api key for the user to filter.",
  "required" : true,
  "type" : "string"
},
        
        {
  "in" : "body",
  "name" : "body",
  "description" : "Content of the job.",
  "required" : true,
  "schema" : {
    "$ref" : "#/definitions/Job"
  }
}
        
      ],
      "responses": {
        
        "201": {
  "description" : "Gets the newly created job info",
  "schema" : {
    "$ref" : "#/definitions/Job"
  }
}
        ,
        
        "204": {
  "description" : "The JSON body is empty.",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        ,
        
        "400": {
  "description" : "Invalid input.",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        ,
        
        "429": {
  "description" : "Too many concurrent requests.",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        ,
        
        "500": {
  "description" : "Server not available.",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        
        
      }
    }
  } ,
  
  "/jobs/{job_id}": {
    "get": {
      "x-swagger-router-controller": "Jobs",
      "tags": ["Jobs"],
      "operationId": "jobsJobIdGet",
      "parameters": [
        
        {
  "name" : "token",
  "in" : "header",
  "description" : "Token for authentication.",
  "required" : false,
  "type" : "string"
},
        
        {
  "name" : "key",
  "in" : "query",
  "description" : "Api key for the user to filter.",
  "required" : false,
  "type" : "string"
},
        
        {
  "name" : "job_id",
  "in" : "path",
  "description" : "ID of job that needs to be fetched",
  "required" : true,
  "type" : "string"
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "Get information about a Job",
  "schema" : {
    "$ref" : "#/definitions/Job"
  }
}
        ,
        
        "401": {
  "description" : "No API key or invalid API key given.",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        ,
        
        "404": {
  "description" : "The specified job does not exists.",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        
        
      }
    }
  } ,
  
  "/jobs/{job_id}": {
    "delete": {
      "x-swagger-router-controller": "Jobs",
      "tags": ["Jobs"],
      "operationId": "jobsJobIdDelete",
      "parameters": [
        
        {
  "name" : "token",
  "in" : "header",
  "description" : "Token for authentication.",
  "required" : false,
  "type" : "string"
},
        
        {
  "name" : "key",
  "in" : "query",
  "description" : "Api key for the user to filter.",
  "required" : false,
  "type" : "string"
},
        
        {
  "name" : "job_id",
  "in" : "path",
  "description" : "ID of job that needs to be fetched",
  "required" : true,
  "type" : "string"
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "Get information about the removed Job.",
  "schema" : {
    "$ref" : "#/definitions/Job"
  }
}
        ,
        
        "401": {
  "description" : "No API key or invalid API key given.",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        ,
        
        "404": {
  "description" : "The specified job does not exists.",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        
        
      }
    }
  } ,
  
  "/jobs/{job_id}": {
    "patch": {
      "x-swagger-router-controller": "Jobs",
      "tags": ["Jobs"],
      "operationId": "jobsJobIdPatch",
      "parameters": [
        
        {
  "in" : "body",
  "name" : "body",
  "description" : "Content of the job.",
  "required" : true,
  "schema" : {
    "$ref" : "#/definitions/Job"
  }
},
        
        {
  "name" : "token",
  "in" : "header",
  "description" : "Token for authentication.",
  "required" : false,
  "type" : "string"
},
        
        {
  "name" : "key",
  "in" : "query",
  "description" : "Api key for the user to filter.",
  "required" : false,
  "type" : "string"
},
        
        {
  "name" : "job_id",
  "in" : "path",
  "description" : "ID of job that needs to be fetched",
  "required" : true,
  "type" : "string"
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "Get information about the removed Job",
  "schema" : {
    "$ref" : "#/definitions/Job"
  }
}
        ,
        
        "409": {
  "description" : "The status of the job could not be changed since it is in a invalid status.",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        ,
        
        "401": {
  "description" : "No API key or invalid API key given.",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        ,
        
        "404": {
  "description" : "The specified job does not exists.",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        
        
      }
    }
  } ,
  
  "/jobs/{job_id}/threads": {
    "get": {
      "x-swagger-router-controller": "Jobs",
      "tags": ["Jobs"],
      "operationId": "jobsJobIdThreadsGet",
      "parameters": [
        
        {
  "name" : "token",
  "in" : "header",
  "description" : "Token for authentication.",
  "required" : false,
  "type" : "string"
},
        
        {
  "name" : "key",
  "in" : "query",
  "description" : "Api key for the user to filter.",
  "required" : false,
  "type" : "string"
},
        
        {
  "name" : "job_id",
  "in" : "path",
  "description" : "ID of job that needs to be fetched",
  "required" : true,
  "type" : "string"
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "Get a list of all threads currently being processed.",
  "schema" : {
    "type" : "array",
    "items" : {
      "$ref" : "#/definitions/Thread"
    }
  }
}
        ,
        
        "401": {
  "description" : "No API key or invalid API key given.",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        ,
        
        "404": {
  "description" : "The specified job does not exists.",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        
        
      }
    }
  } 
  
   ,
  
  "/jobs/{job_id}/output": {
    "get": {
      "x-swagger-router-controller": "Output",
      "tags": ["Output"],
      "operationId": "jobsJobIdOutputGet",
      "parameters": [
        
        {
  "name" : "conversion_id",
  "in" : "query",
  "required" : false,
  "type" : "string"
},
        
        {
  "name" : "input_id",
  "in" : "query",
  "required" : false,
  "type" : "string"
},
        
        {
  "name" : "token",
  "in" : "header",
  "description" : "Token for authentication.",
  "required" : false,
  "type" : "string"
},
        
        {
  "name" : "key",
  "in" : "query",
  "description" : "Api key for the user to filter.",
  "required" : false,
  "type" : "string"
},
        
        {
  "name" : "job_id",
  "in" : "path",
  "description" : "ID of job that needs to be fetched",
  "required" : true,
  "type" : "string"
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "Downloads the binary for the file",
  "schema" : {
    "type" : "array",
    "items" : {
      "$ref" : "#/definitions/OutputFile"
    }
  }
}
        ,
        
        "401": {
  "description" : "No API key or invalid API key given.",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        ,
        
        "404": {
  "description" : "The specified job does not exists.",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        
        
      }
    }
  } ,
  
  "/jobs/{job_id}/output/{file_id}": {
    "get": {
      "x-swagger-router-controller": "Output",
      "tags": ["Output"],
      "operationId": "jobsJobIdOutputFileIdGet",
      "parameters": [
        
        {
  "name" : "token",
  "in" : "header",
  "description" : "Token for authentication.",
  "required" : false,
  "type" : "string"
},
        
        {
  "name" : "key",
  "in" : "query",
  "description" : "Api key for the user to filter.",
  "required" : false,
  "type" : "string"
},
        
        {
  "name" : "job_id",
  "in" : "path",
  "description" : "ID of job that needs to be fetched",
  "required" : true,
  "type" : "string"
},
        
        {
  "name" : "file_id",
  "in" : "path",
  "description" : "Id of the file to download",
  "required" : true,
  "type" : "string"
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "Gets the information for the file.",
  "schema" : {
    "type" : "array",
    "items" : {
      "$ref" : "#/definitions/OutputFile"
    }
  }
}
        ,
        
        "401": {
  "description" : "No API key or invalid API key given.",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        ,
        
        "404": {
  "description" : "The specified job does not exists.",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        
        
      }
    }
  } ,
  
  "/jobs/{job_id}/output/{file_id}": {
    "delete": {
      "x-swagger-router-controller": "Output",
      "tags": ["Output"],
      "operationId": "jobsJobIdOutputFileIdDelete",
      "parameters": [
        
        {
  "name" : "token",
  "in" : "header",
  "description" : "Token for authentication.",
  "required" : false,
  "type" : "string"
},
        
        {
  "name" : "key",
  "in" : "query",
  "description" : "Api key for the user to filter.",
  "required" : false,
  "type" : "string"
},
        
        {
  "name" : "job_id",
  "in" : "path",
  "description" : "ID of job that needs to be fetched",
  "required" : true,
  "type" : "string"
},
        
        {
  "name" : "file_id",
  "in" : "path",
  "description" : "Id of the file to download",
  "required" : true,
  "type" : "string"
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "Gets the information for the deleted file.",
  "schema" : {
    "type" : "array",
    "items" : {
      "$ref" : "#/definitions/OutputFile"
    }
  }
}
        ,
        
        "401": {
  "description" : "No API key or invalid API key given.",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        ,
        
        "404": {
  "description" : "The specified job does not exists.",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        
        
      }
    }
  } 
  
   ,
  
  "/conversions": {
    "get": {
      "x-swagger-router-controller": "Information",
      "tags": ["Information"],
      "operationId": "conversionsGet",
      "parameters": [
        
        {
  "name" : "category",
  "in" : "query",
  "description" : "Category for the conversion.",
  "required" : false,
  "type" : "string"
},
        
        {
  "name" : "target",
  "in" : "query",
  "description" : "Target for for the conversion.",
  "required" : false,
  "type" : "string"
},
        
        {
  "name" : "page",
  "in" : "query",
  "description" : "Pagination for list of elements.",
  "required" : false,
  "type" : "number",
  "default" : "1"
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "List of conversions",
  "schema" : {
    "type" : "array",
    "items" : {
      "$ref" : "#/definitions/Conversion"
    }
  }
}
        
        
      }
    }
  } ,
  
  "/statuses": {
    "get": {
      "x-swagger-router-controller": "Information",
      "tags": ["Information"],
      "operationId": "statusesGet",
      "responses": {
        
        "200": {
  "description" : "List of statuses",
  "schema" : {
    "type" : "array",
    "items" : {
      "$ref" : "#/definitions/Status"
    }
  }
}
        
        
      }
    }
  } 
  
   ,
  
  "/jobs/{job_id}/conversions": {
    "get": {
      "x-swagger-router-controller": "Conversion",
      "tags": ["Conversion"],
      "operationId": "jobsJobIdConversionsGet",
      "parameters": [
        
        {
  "name" : "token",
  "in" : "header",
  "description" : "Token for authentication.",
  "required" : false,
  "type" : "string"
},
        
        {
  "name" : "key",
  "in" : "query",
  "description" : "Api key for the user to filter.",
  "required" : false,
  "type" : "string"
},
        
        {
  "name" : "job_id",
  "in" : "path",
  "description" : "ID of job that needs to be fetched",
  "required" : true,
  "type" : "string"
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "Get a list of all available conversions.",
  "schema" : {
    "type" : "array",
    "items" : {
      "$ref" : "#/definitions/Conversion"
    }
  }
}
        ,
        
        "401": {
  "description" : "No API key or invalid API key given.",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        ,
        
        "404": {
  "description" : "The specified job does not exists.",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        
        
      }
    }
  } ,
  
  "/jobs/{job_id}/conversions": {
    "post": {
      "x-swagger-router-controller": "Conversion",
      "tags": ["Conversion"],
      "operationId": "jobsJobIdConversionsPost",
      "parameters": [
        
        {
  "in" : "body",
  "name" : "body",
  "description" : "information for the conversion.",
  "required" : true,
  "schema" : {
    "$ref" : "#/definitions/Conversion"
  }
},
        
        {
  "name" : "token",
  "in" : "header",
  "description" : "Token for authentication.",
  "required" : false,
  "type" : "string"
},
        
        {
  "name" : "key",
  "in" : "query",
  "description" : "Api key for the user to filter.",
  "required" : false,
  "type" : "string"
},
        
        {
  "name" : "job_id",
  "in" : "path",
  "description" : "ID of job that needs to be fetched",
  "required" : true,
  "type" : "string"
}
        
      ],
      "responses": {
        
        "201": {
  "description" : "The created conversion.",
  "schema" : {
    "$ref" : "#/definitions/Conversion"
  }
}
        ,
        
        "401": {
  "description" : "No API key or invalid API key given.",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        ,
        
        "404": {
  "description" : "The specified job does not exists.",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        
        
      }
    }
  } ,
  
  "/jobs/{job_id}/conversions/{conversion_id}": {
    "get": {
      "x-swagger-router-controller": "Conversion",
      "tags": ["Conversion"],
      "operationId": "jobsJobIdConversionsConversionIdGet",
      "parameters": [
        
        {
  "name" : "token",
  "in" : "header",
  "description" : "Token for authentication.",
  "required" : false,
  "type" : "string"
},
        
        {
  "name" : "key",
  "in" : "query",
  "description" : "Api key for the user to filter.",
  "required" : false,
  "type" : "string"
},
        
        {
  "name" : "job_id",
  "in" : "path",
  "description" : "ID of job that needs to be fetched",
  "required" : true,
  "type" : "string"
},
        
        {
  "name" : "conversion_id",
  "in" : "path",
  "description" : "Identifier for the job conversion.",
  "required" : true,
  "type" : "string"
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "Get a conversion for the current job",
  "schema" : {
    "$ref" : "#/definitions/Conversion"
  }
}
        ,
        
        "401": {
  "description" : "No API key or invalid API key given.",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        ,
        
        "404": {
  "description" : "The specified job does not exists.",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        
        
      }
    }
  } ,
  
  "/jobs/{job_id}/conversions/{conversion_id}": {
    "delete": {
      "x-swagger-router-controller": "Conversion",
      "tags": ["Conversion"],
      "operationId": "jobsJobIdConversionsConversionIdDelete",
      "parameters": [
        
        {
  "name" : "token",
  "in" : "header",
  "description" : "Token for authentication.",
  "required" : false,
  "type" : "string"
},
        
        {
  "name" : "key",
  "in" : "query",
  "description" : "Api key for the user to filter.",
  "required" : false,
  "type" : "string"
},
        
        {
  "name" : "job_id",
  "in" : "path",
  "description" : "ID of job that needs to be fetched",
  "required" : true,
  "type" : "string"
},
        
        {
  "name" : "conversion_id",
  "in" : "path",
  "description" : "Identifier for the job conversion.",
  "required" : true,
  "type" : "string"
}
        
      ],
      "responses": {
        
        "200": {
  "description" : "Get the removed conversion for the current job.",
  "schema" : {
    "$ref" : "#/definitions/Conversion"
  }
}
        ,
        
        "401": {
  "description" : "No API key or invalid API key given.",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        ,
        
        "404": {
  "description" : "The specified job does not exists.",
  "schema" : {
    "$ref" : "#/definitions/Error"
  }
}
        
        
      }
    }
  } 
  
   
  }, "definitions": {
  "Job": {
  "required" : [ "type" ],
  "properties" : {
    "id" : {
      "type" : "string",
      "example" : "1b8bb2649c090df97fa1e2658e9722d1",
      "description" : "Unique identifier for the job."
    },
    "token" : {
      "type" : "string",
      "example" : "12srxin63mgp23f8mtny2rgtgl1nl39i",
      "description" : "Token to identify client allowed to run the job."
    },
    "type" : {
      "type" : "string",
      "description" : "Type of the job created.",
      "enum" : [ "job", "batch" ],
      "default" : "job"
    },
    "status" : {
      "description" : "Current status for the job",
      "$ref" : "#/definitions/Status"
    },
    "process" : {
      "type" : "boolean",
      "description" : "Determine if the job must be processed as soon as it is ready.",
      "default" : true
    },
    "test" : {
      "type" : "boolean",
      "description" : "Determine if it is a test job."
    },
    "conversion" : {
      "type" : "array",
      "description" : "Type of conversion or conversions to be carried out.",
      "items" : {
        "$ref" : "#/definitions/Conversion"
      }
    },
    "input" : {
      "type" : "array",
      "description" : "Source or sources of the files to be converted.",
      "items" : {
        "$ref" : "#/definitions/InputFile"
      }
    },
    "callback" : {
      "type" : "string",
      "example" : "http://www.mysite.com/callback",
      "description" : "Callback url to the the status updates"
    },
    "server" : {
      "type" : "string",
      "example" : "api5//www.online-convert.com",
      "description" : "Server assigned for file uploads and downloads"
    },
    "created_at" : {
      "type" : "string",
      "format" : "date-time",
      "description" : "Date and time when the job was created."
    },
    "modified_at" : {
      "type" : "string",
      "format" : "date-time",
      "description" : "Date and time when the job was last modified."
    }
  }
},"InputFile": {
  "type" : "object",
  "required" : [ "source" ],
  "properties" : {
    "id" : {
      "type" : "string",
      "example" : "43",
      "description" : "Unique identifier for the file."
    },
    "type" : {
      "type" : "string",
      "description" : "How the file has been generated.",
      "enum" : [ "upload", "remote", "output" ],
      "default" : "remote"
    },
    "source" : {
      "type" : "string",
      "example" : "http://www.dropbox.com/f/sfasdfhasdjkr434fadf",
      "description" : "The source of the file to be used that can be either, an external url. An identifier for an uploaded file to the server or an identifier for another job."
    },
    "filename" : {
      "type" : "string",
      "example" : "image.png",
      "description" : "Filename of the file."
    },
    "size" : {
      "type" : "integer",
      "format" : "int32",
      "example" : "12835187",
      "description" : "Size of the file in bytes."
    },
    "created_at" : {
      "type" : "string",
      "format" : "date-time",
      "description" : "Date and time when the job was created."
    },
    "modified_at" : {
      "type" : "string",
      "format" : "date-time",
      "description" : "Date and time when the job was last modified."
    }
  }
},"OutputFile": {
  "type" : "object",
  "required" : [ "source" ],
  "properties" : {
    "id" : {
      "type" : "string",
      "example" : "43",
      "description" : "Unique identifier for the file."
    },
    "source" : {
      "type" : "object",
      "description" : "Sources for the files including the input files and conversion used."
    },
    "uri" : {
      "type" : "string",
      "example" : "http://www3.online-convert.com",
      "description" : "Url for downloading the file."
    },
    "filename" : {
      "type" : "string",
      "example" : "image.png",
      "description" : "Filename of the file."
    },
    "size" : {
      "type" : "integer",
      "format" : "int32",
      "example" : "12835187",
      "description" : "Size of the file in bytes."
    },
    "created_at" : {
      "type" : "string",
      "format" : "date-time",
      "description" : "Date and time when the job was created."
    }
  }
},"Conversion": {
  "type" : "object",
  "required" : [ "target" ],
  "properties" : {
    "target" : {
      "type" : "string",
      "example" : "mp3",
      "description" : "Identifier for the job conversion type."
    },
    "category" : {
      "type" : "string",
      "example" : "audio",
      "description" : "Category for the conveted file."
    },
    "options" : {
      "type" : "object",
      "example" : "",
      "description" : "Type of conversion to perform with the file."
    }
  }
},"Thread": {
  "type" : "object",
  "properties" : {
    "hash" : {
      "type" : "string",
      "description" : "Unique identifier of the thread."
    },
    "status" : {
      "type" : "integer",
      "format" : "int32",
      "description" : "Status of the thread."
    },
    "info" : {
      "type" : "string",
      "description" : "Extra information."
    },
    "created_at" : {
      "type" : "string",
      "format" : "date-time",
      "description" : "Date and time when the job was created."
    },
    "modified_at" : {
      "type" : "string",
      "format" : "date-time",
      "description" : "Date and time when the job was last modified."
    }
  }
},"Status": {
  "required" : [ "code", "info" ],
  "properties" : {
    "code" : {
      "type" : "string",
      "example" : "processing",
      "description" : "Status code identifier."
    },
    "info" : {
      "type" : "string",
      "example" : "The file is being processed.",
      "description" : "Description of the status code."
    }
  }
},"Link": {
  "required" : [ "id" ],
  "properties" : {
    "id" : {
      "type" : "string"
    },
    "uri" : {
      "type" : "string"
    }
  }
},"Error": {
  "properties" : {
    "code" : {
      "type" : "integer",
      "format" : "int32",
      "example" : "8"
    },
    "message" : {
      "type" : "string",
      "example" : "The JSON body is empty"
    },
    "errors" : {
      "type" : "object"
    }
  }
}
  }
}
